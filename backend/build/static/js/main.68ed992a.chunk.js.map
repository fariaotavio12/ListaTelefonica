{"version":3,"sources":["stores/UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","FunctionPaginaFavorito.js","PaginaInicial.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","val","target","React","Component","SubmitButton","disabled","onClick","e","text","LoginForm","state","nome","tel_residencial","tel_celular","email","rede_social","buttonDisabled","property","trim","length","setState","fetch","method","headers","body","JSON","stringify","res","json","result","sucess","resetForm","alert","console","log","to","Value","setInputValue","doLogin","FunctionPaginaFavorito","useState","loadIsListaTelefonica","setListaTelefonica","useEffect","a","getIsFavorite","border","map","lista","PaginaInicial","password","App","path","exact","component","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68ed992a.chunk.js","sourcesContent":["import { extendObservable} from 'mobx';\r\n\r\nclass UserStore {\r\n    constructor(){\r\n        extendObservable(this, {\r\n\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username:''\r\n        })\r\n    }\r\n}\r\nexport default new UserStore();","import React from 'react';\r\n\r\n\r\nclass InputField extends React.Component {\r\n\r\n  render (){\r\n    return (\r\n      <div className=\"inputField\">\r\n            \r\n            <input\r\n                className='input'\r\n                type={this.props.type}\r\n                placeholder={this.props.placeholder}\r\n                value={this.props.value}\r\n                onChange= { (val) => this.props.onChange(val.target.value ) }\r\n               />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\n\r\n\r\nclass SubmitButton extends React.Component {\r\n\r\n  render (){\r\n    return (\r\n      <div className=\"submitButton\">\r\n          <button\r\n          \r\n            className ='btn'\r\n            disabled= {this.props.disabled}\r\n            onClick= { (e) => this.props.onClick()}\r\n            >\r\n                {this.props.text}\r\n\r\n          </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from './stores/UserStore';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    useParams\r\n  } from \"react-router-dom\";\r\n\r\n\r\n/**\r\n * \r\n */\r\nclass LoginForm extends React.Component {\r\n    /**\r\n     * \r\n     * @param {*Propriedade que o constructor vai receber} props \r\n     */\r\n    constructor(props){\r\n\r\n        super(props);\r\n        this.state = {\r\n            nome:'',\r\n            tel_residencial: '',\r\n            tel_celular: '',\r\n            email: '',\r\n            rede_social:'',\r\n            buttonDisabled:false\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @param {*E a variavel que receber o set} property \r\n     * @param {*val e o a variavel para confirmar o if} val \r\n     * @returns \r\n     */\r\n    setInputValue(property, val){\r\n        val = val.trim();\r\n        if(val.length > 120){\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n    resetForm(){\r\n        this.setState({\r\n            nome:'',\r\n            tel_residencial: '',\r\n            tel_celular: '',\r\n            email: '',\r\n            rede_social:'',\r\n            buttonDisabled: false\r\n        })\r\n    }\r\n    async doLogin(){\r\n        if(!this.state.nome){\r\n            return;\r\n        }\r\n        if(!this.state.tel_residencial){\r\n            return;\r\n        }\r\n        if(!this.state.tel_celular){\r\n            return;\r\n        }\r\n        if(!this.state.email){\r\n            return;\r\n        }\r\n        if(!this.state.rede_social){\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n        try{\r\n           \r\n            \r\n             \r\n            \r\n            let res = await fetch('/AdicionaLista',{\r\n                method:'post',\r\n                headers:{\r\n                    'Accept': 'application/json',\r\n                    'Content-Type':'application/json'\r\n                },\r\n                body:JSON.stringify({\r\n                    nome:this.state.nome,\r\n                    tel_residencial:this.state.tel_residencial,\r\n                    tel_celular:this.state.tel_celular,\r\n                    email:this.state.email,\r\n                    rede_social:this.state.rede_social\r\n                    \r\n                })\r\n            });\r\n            /**conferindo se deu tudo certo. */\r\n            let result = await res.json();\r\n            if (result && result.sucess === true){\r\n                this.resetForm();\r\n                alert(\"Adicionado na lista com sucesso\");\r\n            }\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n            this.resetForm();\r\n\r\n        }\r\n    }\r\n  \r\n\r\nrender (){\r\n    return (\r\n        <div>\r\n            <br></br>\r\n            <div className = \"container \">\r\n            <div className = \"link\">\r\n\r\n                <div className = \"submitButton\">\r\n                <Link to=\"/\" className = \"classe1\" >Lista Telefonica</Link></div>\r\n                </div>\r\n                <br></br>\r\n                <div className=\"loginForm\">\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <InputField\r\n                        type='text'\r\n                        placeholder='Digite o nome'\r\n                        Value={this.state.nome ? this.state.nome : ''}\r\n                        onChange={ (val) => this.setInputValue('nome' , val)}\r\n                    />\r\n                    <InputField\r\n                        type='text'\r\n                        placeholder='Digite o telefone residencial'\r\n                        Value={this.state.tel_residencial ? this.state.tel_residencial : ''}\r\n                        onChange={ (val) => this.setInputValue('tel_residencial' , val)}\r\n                    />\r\n                    <InputField\r\n                        type='text'\r\n                        placeholder='Digite o telefone celular'\r\n                        Value={this.state.tel_celular ? this.state.tel_celular : ''}\r\n                        onChange={ (val) => this.setInputValue('tel_celular' , val)}\r\n                    />\r\n                    <InputField\r\n                        type='text'\r\n                        placeholder='Digite o email'\r\n                        Value={this.state.email ? this.state.email : ''}\r\n                        onChange={ (val) => this.setInputValue('email' , val)}\r\n                    />\r\n                    <InputField\r\n                        type='text'\r\n                        placeholder='Digite a rede social'\r\n                        Value={this.state.rede_social ? this.state.rede_social : ''}\r\n                        onChange={ (val) => this.setInputValue('rede_social' , val)}\r\n                    />\r\n                    \r\n                    <SubmitButton\r\n                        text='Adicionar na lista'\r\n                        disabled={this.state.buttonDisabled}\r\n                        onClick={ () => this.doLogin()}\r\n                    />\r\n                 </div>\r\n            </div>\r\n      </div>\r\n    );\r\n\r\n}\r\n}\r\n  \r\n/*<link to='/cadastrar'>Cadastrar</link>*/\r\nexport default LoginForm;\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport {useEffect, useState} from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n   \r\n    Link,\r\n    \r\n  } from \"react-router-dom\";\r\n\r\n\r\n  export default function FunctionPaginaFavorito(){\r\n\r\n    /**Get no banco de dados. */\r\n    const [ loadIsListaTelefonica, setListaTelefonica ] = useState([]);\r\n    useEffect(()=>{\r\n        async function getIsFavorite(){\r\n          const idFavoritedShows = []\r\n          console.log(\"Buscando favoritos\")\r\n          \r\n          const res = await fetch('/BuscarLista', { \r\n            method:'get',\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n           });\r\n           const {result} = await res.json();\r\n           console.log(result);\r\n          if(result){\r\n            \r\n            setListaTelefonica(result)\r\n            \r\n          }\r\n          \r\n        }\r\n        \r\n        getIsFavorite()\r\n        \r\n      },[]);\r\n   \r\n    /**Lendo o get do banco de dados e adicionando ele no frontend. */  \r\n    return (\r\n        <div className=\"container\">\r\n            <br></br>\r\n            \r\n            <div className = \"link\">\r\n\r\n             \r\n             <div className = \"submitButton\">\r\n             <Link to=\"/adiciona\" className = \"classe1\" >Adicionar na lista</Link></div>\r\n             \r\n            \r\n             <br></br>\r\n      </div>\r\n      <br></br>\r\n      <div className=\"loginForm\">\r\n          \r\n          <table border=\"1\">\r\n                <tr>\r\n                    <td>Nome</td>\r\n                    <td>Telefone Residencial</td>\r\n                    <td>Telefone Celular</td>\r\n                    <td>Email</td>\r\n                    <td>Rede social</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Ted</td>\r\n                    <td>Ted</td>\r\n                    <td>22</td>\r\n                    <td>Estudante</td>\r\n                    <td>Estudante</td>\r\n\r\n                </tr>\r\n                <tr>\r\n                    <td>Ted</td>\r\n                    <td>Ralf</td>\r\n                    <td>26</td>\r\n                    <td>Designerasdasas.cm</td>\r\n                    <td>Estudanteasdasd</td>\r\n                </tr>\r\n                \r\n                {loadIsListaTelefonica.map((lista) => (\r\n                  \r\n                  \r\n                  <tr>\r\n                    <td>{lista.nome}</td>\r\n                    <td>{lista.tel_residencial}</td>\r\n                    <td>{lista.tel_celular}</td>\r\n                    <td>{lista.email}</td>\r\n                    <td>{lista.rede_social}</td>\r\n                </tr>\r\n                ))}\r\n                \r\n            </table>\r\n           \r\n             \r\n                \r\n            \r\n      </div>\r\n      <br></br>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from './stores/UserStore';\r\nimport LoginForm from './LoginForm';\r\nimport {\r\n    BrowserRouter as Router,\r\n   \r\n    Link,\r\n    \r\n  } from \"react-router-dom\";\r\n  import FunctionPaginaFavorito from './FunctionPaginaFavorito';\r\n\r\nclass PaginaInicial extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled:false\r\n        }\r\n    }\r\n  render (){\r\n\r\n    return (\r\n        <div>\r\n            {<FunctionPaginaFavorito/>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PaginaInicial;\r\n","import React from 'react';\nimport {observer} from 'mobx-react';\nimport UserStore from './stores/UserStore';\nimport LoginForm from './LoginForm';\n\nimport PaginaInicial from './PaginaInicial';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams,\n  BrowserRouter\n} from \"react-router-dom\";\n\nimport './App.css';\n\n\nclass App extends React.Component {\n\n\n  render (){\n   \n    return (\n      <div className=\"container\">\n          <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact component={PaginaInicial} />\n          <Route path=\"/Adiciona\"component={LoginForm} />\n\n        </Switch>\n    </BrowserRouter>\n      </div>\n     \n  );\n}\n  \n}\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}